from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris

# Load the iris dataset
irisdata = load_iris()
x = irisdata.data
y = irisdata.target

# Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)  # Adjust the test_size as needed

# Create a KNN classifier with one neighbor
Knn = KNeighborsClassifier(n_neighbors=1)

# Fit the model to the training data
Knn.fit(x_train, y_train)

# Print the test data
print("Test Data:")
print(x_test)

# Make predictions on the test data
predictions = Knn.predict(x_test)
print("Predictions:")
print(predictions)

# Print the actual labels of the test data
print("Actual Labels:")
print(y_test)

# Calculate and print the accuracy
accuracy = sum(predictions == y_test) / len(y_test)
print("Accuracy:", accuracy)

# Make a prediction for a new data point
new_data_point = [[2, 4, 6, 2]]
result = Knn.predict(new_data_point)
print("Predicted class for new data point:", irisdata.target_names[result])
