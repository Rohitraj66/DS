from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB

# Load the Iris dataset
X, y = load_iris(return_X_y=True)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=0)

# Create a Gaussian Naive Bayes model
gnb = GaussianNB()

# Train the model on the training set and make predictions on the test set
y_pred = gnb.fit(X_train, y_train).predict(X_test)
print("Predictions on test set:")
print(y_pred)

# Predict the class for a new sample
x_new = [[5, 5, 4, 4]]  # Note: Provide x_new as a list of lists
y_new = gnb.predict(x_new)
print("Predicted output for [[5, 5, 4, 4]]:", y_new)

# Evaluate the model's accuracy on the test set
accuracy = gnb.score(X_test, y_test)
print("Naive Bayes score:", accuracy)
